"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9038],{876:(e,t,a)=>{a.d(t,{Zo:()=>o,kt:()=>N});var n=a(2784);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function d(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var p=n.createContext({}),m=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},o=function(e){var t=m(e.components);return n.createElement(p.Provider,{value:t},e.children)},k={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,o=d(e,["components","mdxType","originalType","parentName"]),s=m(a),N=i,c=s["".concat(p,".").concat(N)]||s[N]||k[N]||r;return a?n.createElement(c,l(l({ref:t},o),{},{components:a})):n.createElement(c,l({ref:t},o))}));function N(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,l=new Array(r);l[0]=s;var d={};for(var p in t)hasOwnProperty.call(t,p)&&(d[p]=t[p]);d.originalType=e,d.mdxType="string"==typeof e?e:i,l[1]=d;for(var m=2;m<r;m++)l[m]=a[m];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}s.displayName="MDXCreateElement"},5288:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>k,frontMatter:()=>r,metadata:()=>d,toc:()=>m});var n=a(7896),i=(a(2784),a(876));const r={id:"Client",title:"Class: Client",sidebar_label:"Client",sidebar_position:0,custom_edit_url:null},l=void 0,d={unversionedId:"api/classes/Client",id:"api/classes/Client",title:"Class: Client",description:"Hierarchy",source:"@site/docs/api/classes/Client.md",sourceDirName:"api/classes",slug:"/api/classes/Client",permalink:"/docs/api/classes/Client",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"Client",title:"Class: Client",sidebar_label:"Client",sidebar_position:0,custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"Channel",permalink:"/docs/api/classes/Channel"},next:{title:"ClientUser",permalink:"/docs/api/classes/ClientUser"}},p={},m=[{value:"Hierarchy",id:"hierarchy",level:2},{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Inherited from",id:"inherited-from",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Properties",id:"properties",level:2},{value:"bot",id:"bot",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"channels",id:"channels",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"disableEvents",id:"disableevents",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"fetchAllMembers",id:"fetchallmembers",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"gateway",id:"gateway",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"guilds",id:"guilds",level:3},{value:"Defined in",id:"defined-in-6",level:4},{value:"intents",id:"intents",level:3},{value:"Defined in",id:"defined-in-7",level:4},{value:"options",id:"options",level:3},{value:"Defined in",id:"defined-in-8",level:4},{value:"presence",id:"presence",level:3},{value:"Defined in",id:"defined-in-9",level:4},{value:"requestHandler",id:"requesthandler",level:3},{value:"Defined in",id:"defined-in-10",level:4},{value:"rest",id:"rest",level:3},{value:"Type declaration",id:"type-declaration",level:4},{value:"Defined in",id:"defined-in-11",level:4},{value:"slashCommand",id:"slashcommand",level:3},{value:"Defined in",id:"defined-in-12",level:4},{value:"slashCommands",id:"slashcommands",level:3},{value:"Defined in",id:"defined-in-13",level:4},{value:"token",id:"token",level:3},{value:"Defined in",id:"defined-in-14",level:4},{value:"unavailableGuilds",id:"unavailableguilds",level:3},{value:"Defined in",id:"defined-in-15",level:4},{value:"user",id:"user",level:3},{value:"Defined in",id:"defined-in-16",level:4},{value:"users",id:"users",level:3},{value:"Defined in",id:"defined-in-17",level:4},{value:"ws",id:"ws",level:3},{value:"Type declaration",id:"type-declaration-1",level:4},{value:"Defined in",id:"defined-in-18",level:4},{value:"Methods",id:"methods",level:2},{value:"bulkOverwriteApplicationCommands",id:"bulkoverwriteapplicationcommands",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in-19",level:4},{value:"bulkOverwriteGuildApplicationCommands",id:"bulkoverwriteguildapplicationcommands",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-20",level:4},{value:"connect",id:"connect",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-21",level:4},{value:"createApplicationCommand",id:"createapplicationcommand",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-22",level:4},{value:"createDM",id:"createdm",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-23",level:4},{value:"createGuildApplicationCommand",id:"createguildapplicationcommand",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-24",level:4},{value:"deleteApplicationCommand",id:"deleteapplicationcommand",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Defined in",id:"defined-in-25",level:4},{value:"deleteGuildApplicationCommand",id:"deleteguildapplicationcommand",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Defined in",id:"defined-in-26",level:4},{value:"editApplicationCommand",id:"editapplicationcommand",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-8",level:4},{value:"Defined in",id:"defined-in-27",level:4},{value:"editGuildApplicationCommand",id:"editguildapplicationcommand",level:3},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Defined in",id:"defined-in-28",level:4},{value:"emit",id:"emit",level:3},{value:"Type parameters",id:"type-parameters",level:4},{value:"Parameters",id:"parameters-11",level:4},{value:"Returns",id:"returns-10",level:4},{value:"Inherited from",id:"inherited-from-1",level:4},{value:"Defined in",id:"defined-in-29",level:4},{value:"emitSync",id:"emitsync",level:3},{value:"Type parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters-12",level:4},{value:"Returns",id:"returns-11",level:4},{value:"Inherited from",id:"inherited-from-2",level:4},{value:"Defined in",id:"defined-in-30",level:4},{value:"fetchApplicationCommand",id:"fetchapplicationcommand",level:3},{value:"Parameters",id:"parameters-13",level:4},{value:"Returns",id:"returns-12",level:4},{value:"Defined in",id:"defined-in-31",level:4},{value:"fetchApplicationCommands",id:"fetchapplicationcommands",level:3},{value:"Parameters",id:"parameters-14",level:4},{value:"Returns",id:"returns-13",level:4},{value:"Defined in",id:"defined-in-32",level:4},{value:"fetchChannel",id:"fetchchannel",level:3},{value:"Parameters",id:"parameters-15",level:4},{value:"Returns",id:"returns-14",level:4},{value:"Defined in",id:"defined-in-33",level:4},{value:"fetchGuild",id:"fetchguild",level:3},{value:"Parameters",id:"parameters-16",level:4},{value:"Returns",id:"returns-15",level:4},{value:"Defined in",id:"defined-in-34",level:4},{value:"fetchGuildApplicationCommand",id:"fetchguildapplicationcommand",level:3},{value:"Parameters",id:"parameters-17",level:4},{value:"Returns",id:"returns-16",level:4},{value:"Defined in",id:"defined-in-35",level:4},{value:"fetchGuildApplicationCommands",id:"fetchguildapplicationcommands",level:3},{value:"Parameters",id:"parameters-18",level:4},{value:"Returns",id:"returns-17",level:4},{value:"Defined in",id:"defined-in-36",level:4},{value:"fetchMembers",id:"fetchmembers",level:3},{value:"Parameters",id:"parameters-19",level:4},{value:"Returns",id:"returns-18",level:4},{value:"Defined in",id:"defined-in-37",level:4},{value:"off",id:"off",level:3},{value:"Type parameters",id:"type-parameters-2",level:4},{value:"Parameters",id:"parameters-20",level:4},{value:"Returns",id:"returns-19",level:4},{value:"Inherited from",id:"inherited-from-3",level:4},{value:"Defined in",id:"defined-in-38",level:4},{value:"Type parameters",id:"type-parameters-3",level:4},{value:"Parameters",id:"parameters-21",level:4},{value:"Returns",id:"returns-20",level:4},{value:"Inherited from",id:"inherited-from-4",level:4},{value:"Defined in",id:"defined-in-39",level:4},{value:"Returns",id:"returns-21",level:4},{value:"Inherited from",id:"inherited-from-5",level:4},{value:"Defined in",id:"defined-in-40",level:4},{value:"once",id:"once",level:3},{value:"Type parameters",id:"type-parameters-4",level:4},{value:"Parameters",id:"parameters-22",level:4},{value:"Returns",id:"returns-22",level:4},{value:"Inherited from",id:"inherited-from-6",level:4},{value:"Defined in",id:"defined-in-41",level:4},{value:"queue",id:"queue",level:3},{value:"Type parameters",id:"type-parameters-5",level:4},{value:"Parameters",id:"parameters-23",level:4},{value:"Returns",id:"returns-23",level:4},{value:"Inherited from",id:"inherited-from-7",level:4},{value:"Defined in",id:"defined-in-42",level:4},{value:"toJSON",id:"tojson",level:3},{value:"Parameters",id:"parameters-24",level:4},{value:"Returns",id:"returns-24",level:4},{value:"Defined in",id:"defined-in-43",level:4},{value:"Events",id:"events",level:2},{value:"on",id:"on",level:3},{value:"Parameters",id:"parameters-25",level:4},{value:"Returns",id:"returns-25",level:4},{value:"Overrides",id:"overrides",level:4},{value:"Defined in",id:"defined-in-44",level:4},{value:"Parameters",id:"parameters-26",level:4},{value:"Returns",id:"returns-26",level:4},{value:"Overrides",id:"overrides-1",level:4},{value:"Defined in",id:"defined-in-45",level:4},{value:"Parameters",id:"parameters-27",level:4},{value:"Returns",id:"returns-27",level:4},{value:"Overrides",id:"overrides-2",level:4},{value:"Defined in",id:"defined-in-46",level:4},{value:"Parameters",id:"parameters-28",level:4},{value:"Returns",id:"returns-28",level:4},{value:"Overrides",id:"overrides-3",level:4},{value:"Defined in",id:"defined-in-47",level:4},{value:"Parameters",id:"parameters-29",level:4},{value:"Returns",id:"returns-29",level:4},{value:"Overrides",id:"overrides-4",level:4},{value:"Defined in",id:"defined-in-48",level:4},{value:"Parameters",id:"parameters-30",level:4},{value:"Returns",id:"returns-30",level:4},{value:"Overrides",id:"overrides-5",level:4},{value:"Defined in",id:"defined-in-49",level:4},{value:"Parameters",id:"parameters-31",level:4},{value:"Returns",id:"returns-31",level:4},{value:"Overrides",id:"overrides-6",level:4},{value:"Defined in",id:"defined-in-50",level:4},{value:"Parameters",id:"parameters-32",level:4},{value:"Returns",id:"returns-32",level:4},{value:"Overrides",id:"overrides-7",level:4},{value:"Defined in",id:"defined-in-51",level:4},{value:"Parameters",id:"parameters-33",level:4},{value:"Returns",id:"returns-33",level:4},{value:"Overrides",id:"overrides-8",level:4},{value:"Defined in",id:"defined-in-52",level:4},{value:"Parameters",id:"parameters-34",level:4},{value:"Returns",id:"returns-34",level:4},{value:"Overrides",id:"overrides-9",level:4},{value:"Defined in",id:"defined-in-53",level:4},{value:"Parameters",id:"parameters-35",level:4},{value:"Returns",id:"returns-35",level:4},{value:"Overrides",id:"overrides-10",level:4},{value:"Defined in",id:"defined-in-54",level:4},{value:"Parameters",id:"parameters-36",level:4},{value:"Returns",id:"returns-36",level:4},{value:"Overrides",id:"overrides-11",level:4},{value:"Defined in",id:"defined-in-55",level:4},{value:"Parameters",id:"parameters-37",level:4},{value:"Returns",id:"returns-37",level:4},{value:"Overrides",id:"overrides-12",level:4},{value:"Defined in",id:"defined-in-56",level:4},{value:"Parameters",id:"parameters-38",level:4},{value:"Returns",id:"returns-38",level:4},{value:"Overrides",id:"overrides-13",level:4},{value:"Defined in",id:"defined-in-57",level:4},{value:"Parameters",id:"parameters-39",level:4},{value:"Returns",id:"returns-39",level:4},{value:"Overrides",id:"overrides-14",level:4},{value:"Defined in",id:"defined-in-58",level:4}],o={toc:m};function k(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},o,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"EventEmitter")),(0,i.kt)("p",{parentName:"li"},"\u21b3 ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"Client"))))),(0,i.kt)("h2",{id:"constructors"},"Constructors"),(0,i.kt)("h3",{id:"constructor"},"constructor"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"new Client"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"options"),")"),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"options")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/api/interfaces/ClientOptions"},(0,i.kt)("inlineCode",{parentName:"a"},"ClientOptions"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"options of the bot")))),(0,i.kt)("h4",{id:"inherited-from"},"Inherited from"),(0,i.kt)("p",null,"EventEmitter.constructor"),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L268"},"packages/libcord/src/Client.ts:268")),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"bot"},"bot"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"bot"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L238"},"packages/libcord/src/Client.ts:238")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"channels"},"channels"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"channels"),": ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Collection"},(0,i.kt)("inlineCode",{parentName:"a"},"Collection")),"<",(0,i.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/VoiceChannel"},(0,i.kt)("inlineCode",{parentName:"a"},"VoiceChannel"))," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/TextChannel"},(0,i.kt)("inlineCode",{parentName:"a"},"TextChannel"))," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/CategoryChannel"},(0,i.kt)("inlineCode",{parentName:"a"},"CategoryChannel"))," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/PrivateChannel"},(0,i.kt)("inlineCode",{parentName:"a"},"PrivateChannel")),">"),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L249"},"packages/libcord/src/Client.ts:249")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"disableevents"},"disableEvents"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"disableEvents"),": (",(0,i.kt)("inlineCode",{parentName:"p"},'"ApplicationCommandPermissionsUpdate"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"ChannelCreate"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"ChannelDelete"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"ChannelPinsUpdate"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"ChannelUpdate"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"GuildBanAdd"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"GuildBanRemove"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"GuildCreate"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"GuildDelete"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"GuildEmojisUpdate"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"GuildIntegrationsUpdate"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"GuildMemberAdd"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"GuildMemberRemove"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"GuildMembersChunk"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"GuildMemberUpdate"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"GuildRoleCreate"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"GuildRoleDelete"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"GuildRoleUpdate"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"GuildStickersUpdate"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"GuildUpdate"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"IntegrationCreate"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"IntegrationDelete"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"IntegrationUpdate"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"InteractionCreate"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"InviteCreate"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"InviteDelete"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"MessageCreate"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"MessageDelete"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"MessageDeleteBulk"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"MessageReactionAdd"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"MessageReactionRemove"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"MessageReactionRemoveAll"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"MessageReactionRemoveEmoji"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"MessageUpdate"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"PresenceUpdate"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"StageInstanceCreate"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"StageInstanceDelete"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"StageInstanceUpdate"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"Ready"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"Resumed"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"ThreadCreate"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"ThreadDelete"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"ThreadListSync"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"ThreadMembersUpdate"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"ThreadMemberUpdate"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"ThreadUpdate"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"TypingStart"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"UserUpdate"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"VoiceServerUpdate"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"VoiceStateUpdate"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"WebhooksUpdate"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"GuildScheduledEventCreate"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"GuildScheduledEventUpdate"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"GuildScheduledEventDelete"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"GuildScheduledEventUserAdd"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"GuildScheduledEventUserRemove"'),")[]"),(0,i.kt)("p",null,"list of events that the bot don't emit"),(0,i.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L229"},"packages/libcord/src/Client.ts:229")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"fetchallmembers"},"fetchAllMembers"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"fetchAllMembers"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L237"},"packages/libcord/src/Client.ts:237")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"gateway"},"gateway"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"gateway"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Gateway")),(0,i.kt)("p",null,"bot gateway"),(0,i.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L224"},"packages/libcord/src/Client.ts:224")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"guilds"},"guilds"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"guilds"),": ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Collection"},(0,i.kt)("inlineCode",{parentName:"a"},"Collection")),"<",(0,i.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Guild"},(0,i.kt)("inlineCode",{parentName:"a"},"Guild")),">"),(0,i.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L248"},"packages/libcord/src/Client.ts:248")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"intents"},"intents"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"intents"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"int number for intents"),(0,i.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L216"},"packages/libcord/src/Client.ts:216")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"options"},"options"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"options"),": ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/interfaces/ClientOptions"},(0,i.kt)("inlineCode",{parentName:"a"},"ClientOptions"))),(0,i.kt)("p",null,"the options for the client"),(0,i.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L264"},"packages/libcord/src/Client.ts:264")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"presence"},"presence"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"presence"),": ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/interfaces/Presence"},(0,i.kt)("inlineCode",{parentName:"a"},"Presence"))," = ",(0,i.kt)("inlineCode",{parentName:"p"},"{}")),(0,i.kt)("p",null,"bot current presence"),(0,i.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L220"},"packages/libcord/src/Client.ts:220")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"requesthandler"},"requestHandler"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"requestHandler"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"RestManager")),(0,i.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L225"},"packages/libcord/src/Client.ts:225")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"rest"},"rest"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"rest"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Object")),(0,i.kt)("h4",{id:"type-declaration"},"Type declaration"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"ping")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number"))))),(0,i.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L243"},"packages/libcord/src/Client.ts:243")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"slashcommand"},"slashCommand"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"slashCommand"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L260"},"packages/libcord/src/Client.ts:260")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"slashcommands"},"slashCommands"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"slashCommands"),": ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Collection"},(0,i.kt)("inlineCode",{parentName:"a"},"Collection")),"<",(0,i.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/ApplicationCommand"},(0,i.kt)("inlineCode",{parentName:"a"},"ApplicationCommand")),">"),(0,i.kt)("h4",{id:"defined-in-13"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L253"},"packages/libcord/src/Client.ts:253")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"token"},"token"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"token"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"any")),(0,i.kt)("h4",{id:"defined-in-14"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L235"},"packages/libcord/src/Client.ts:235")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"unavailableguilds"},"unavailableGuilds"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"unavailableGuilds"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"string"),"[] = ",(0,i.kt)("inlineCode",{parentName:"p"},"[]")),(0,i.kt)("h4",{id:"defined-in-15"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L255"},"packages/libcord/src/Client.ts:255")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"user"},"user"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"user"),": ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/ClientUser"},(0,i.kt)("inlineCode",{parentName:"a"},"ClientUser"))),(0,i.kt)("p",null,"a user object of the bot"),(0,i.kt)("h4",{id:"defined-in-16"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L234"},"packages/libcord/src/Client.ts:234")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"users"},"users"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"users"),": ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Collection"},(0,i.kt)("inlineCode",{parentName:"a"},"Collection")),"<",(0,i.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/User"},(0,i.kt)("inlineCode",{parentName:"a"},"User")),">"),(0,i.kt)("h4",{id:"defined-in-17"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L247"},"packages/libcord/src/Client.ts:247")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"ws"},"ws"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"ws"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Object")),(0,i.kt)("h4",{id:"type-declaration-1"},"Type declaration"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"ping")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number"))))),(0,i.kt)("h4",{id:"defined-in-18"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L240"},"packages/libcord/src/Client.ts:240")),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"bulkoverwriteapplicationcommands"},"bulkOverwriteApplicationCommands"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"bulkOverwriteApplicationCommands"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"commands"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"cache?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/ApplicationCommand"},(0,i.kt)("inlineCode",{parentName:"a"},"ApplicationCommand")),"[]",">"),(0,i.kt)("p",null,"Takes a list of application commands, overwriting existing commands that are registered globally for this application. Updates will be available in all guilds after 1 hour."),(0,i.kt)("h4",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"commands")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/api/interfaces/ApplicationCommandBase"},(0,i.kt)("inlineCode",{parentName:"a"},"ApplicationCommandBase")),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"a list of command object")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"cache?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"true")),(0,i.kt)("td",{parentName:"tr",align:"left"},"set commands to cache")))),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/ApplicationCommand"},(0,i.kt)("inlineCode",{parentName:"a"},"ApplicationCommand")),"[]",">"),(0,i.kt)("h4",{id:"defined-in-19"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L569"},"packages/libcord/src/Client.ts:569")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"bulkoverwriteguildapplicationcommands"},"bulkOverwriteGuildApplicationCommands"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"bulkOverwriteGuildApplicationCommands"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"guildId"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"commands"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"cache?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/ApplicationCommand"},(0,i.kt)("inlineCode",{parentName:"a"},"ApplicationCommand")),"[]",">"),(0,i.kt)("p",null,"Takes a list of application commands, overwriting existing commands for the guild."),(0,i.kt)("h4",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"guildId")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"the id of the guild")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"commands")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/api/interfaces/ApplicationCommandBase"},(0,i.kt)("inlineCode",{parentName:"a"},"ApplicationCommandBase")),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"a list of command object")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"cache?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"true")),(0,i.kt)("td",{parentName:"tr",align:"left"},"set commands to cache")))),(0,i.kt)("h4",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/ApplicationCommand"},(0,i.kt)("inlineCode",{parentName:"a"},"ApplicationCommand")),"[]",">"),(0,i.kt)("h4",{id:"defined-in-20"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L779"},"packages/libcord/src/Client.ts:779")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"connect"},"connect"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"connect"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"token"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Client"},(0,i.kt)("inlineCode",{parentName:"a"},"Client"))),(0,i.kt)("p",null,"connect the bot to discord"),(0,i.kt)("h4",{id:"parameters-3"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"token")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"))))),(0,i.kt)("h4",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Client"},(0,i.kt)("inlineCode",{parentName:"a"},"Client"))),(0,i.kt)("h4",{id:"defined-in-21"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L302"},"packages/libcord/src/Client.ts:302")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"createapplicationcommand"},"createApplicationCommand"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"createApplicationCommand"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"data"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"cache?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/ApplicationCommand"},(0,i.kt)("inlineCode",{parentName:"a"},"ApplicationCommand"))," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/ApplicationCommand"},(0,i.kt)("inlineCode",{parentName:"a"},"ApplicationCommand")),"[]",">"),(0,i.kt)("p",null,"Create a new global command. New global commands will be available in all guilds after 1 hour, this also takes arrays ",(0,i.kt)("br",null),"\n\u26a0 Creating a command with the same name as an existing command for your application will overwrite the old command. see ",(0,i.kt)("a",{parentName:"p",href:"https://discord.com/developers/docs/interactions/slash-commands#create-global-application-command"},"discord-api-docs")),(0,i.kt)("h4",{id:"parameters-4"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"data")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/api/interfaces/ApplicationCommandBase"},(0,i.kt)("inlineCode",{parentName:"a"},"ApplicationCommandBase"))," ","|"," ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/interfaces/ApplicationCommandBase"},(0,i.kt)("inlineCode",{parentName:"a"},"ApplicationCommandBase")),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"a base object of the command or an array of the commands")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"cache?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"true")),(0,i.kt)("td",{parentName:"tr",align:"left"},"set the command to cache")))),(0,i.kt)("h4",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/ApplicationCommand"},(0,i.kt)("inlineCode",{parentName:"a"},"ApplicationCommand"))," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/ApplicationCommand"},(0,i.kt)("inlineCode",{parentName:"a"},"ApplicationCommand")),"[]",">"),(0,i.kt)("h4",{id:"defined-in-22"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L441"},"packages/libcord/src/Client.ts:441")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"createdm"},"createDM"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"createDM"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"userId"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/PrivateChannel"},(0,i.kt)("inlineCode",{parentName:"a"},"PrivateChannel")),">"),(0,i.kt)("h4",{id:"parameters-5"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"userId")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"))))),(0,i.kt)("h4",{id:"returns-4"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/PrivateChannel"},(0,i.kt)("inlineCode",{parentName:"a"},"PrivateChannel")),">"),(0,i.kt)("h4",{id:"defined-in-23"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L401"},"packages/libcord/src/Client.ts:401")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"createguildapplicationcommand"},"createGuildApplicationCommand"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"createGuildApplicationCommand"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"guildId"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"data"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"cache?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/ApplicationCommand"},(0,i.kt)("inlineCode",{parentName:"a"},"ApplicationCommand"))," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/ApplicationCommand"},(0,i.kt)("inlineCode",{parentName:"a"},"ApplicationCommand")),"[]",">"),(0,i.kt)("p",null,"Create a new guild command. ",(0,i.kt)("br",null),"\n\u26a0 Creating a command with the same name as an existing command for your application will overwrite the old command. see ",(0,i.kt)("a",{parentName:"p",href:"https://discord.com/developers/docs/interactions/slash-commands#create-guild-application-command"},"discord-api-docs")),(0,i.kt)("h4",{id:"parameters-6"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"guildId")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"the id of the guild")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"data")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/api/interfaces/ApplicationCommandBase"},(0,i.kt)("inlineCode",{parentName:"a"},"ApplicationCommandBase"))," ","|"," ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/interfaces/ApplicationCommandBase"},(0,i.kt)("inlineCode",{parentName:"a"},"ApplicationCommandBase")),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"a base object of the command, or an array of commands")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"cache?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"true")),(0,i.kt)("td",{parentName:"tr",align:"left"},"set the command to cache")))),(0,i.kt)("h4",{id:"returns-5"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/ApplicationCommand"},(0,i.kt)("inlineCode",{parentName:"a"},"ApplicationCommand"))," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/ApplicationCommand"},(0,i.kt)("inlineCode",{parentName:"a"},"ApplicationCommand")),"[]",">"),(0,i.kt)("h4",{id:"defined-in-24"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L629"},"packages/libcord/src/Client.ts:629")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"deleteapplicationcommand"},"deleteApplicationCommand"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"deleteApplicationCommand"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"commandId"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("p",null,"delete a global application command"),(0,i.kt)("h4",{id:"parameters-7"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"commandId")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},"the id of the command")))),(0,i.kt)("h4",{id:"returns-6"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"defined-in-25"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L552"},"packages/libcord/src/Client.ts:552")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"deleteguildapplicationcommand"},"deleteGuildApplicationCommand"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"deleteGuildApplicationCommand"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"guildId"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"commandId"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("p",null,"delete a guild command"),(0,i.kt)("h4",{id:"parameters-8"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"guildId")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},"the id of the guild")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"commandId")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},"the id of the command")))),(0,i.kt)("h4",{id:"returns-7"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"defined-in-26"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L756"},"packages/libcord/src/Client.ts:756")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"editapplicationcommand"},"editApplicationCommand"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"editApplicationCommand"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"commandId"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"data"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"cache?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/ApplicationCommand"},(0,i.kt)("inlineCode",{parentName:"a"},"ApplicationCommand")),">"),(0,i.kt)("p",null,"Edit a global command. Updates will be available in all guilds after 1 hour"),(0,i.kt)("h4",{id:"parameters-9"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"commandId")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"the id of the command")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"data")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/api/interfaces/EditApplicationCommandOptions"},(0,i.kt)("inlineCode",{parentName:"a"},"EditApplicationCommandOptions"))),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"options to edit")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"cache?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"true")),(0,i.kt)("td",{parentName:"tr",align:"left"},"set/update the command to cache")))),(0,i.kt)("h4",{id:"returns-8"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/ApplicationCommand"},(0,i.kt)("inlineCode",{parentName:"a"},"ApplicationCommand")),">"),(0,i.kt)("h4",{id:"defined-in-27"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L516"},"packages/libcord/src/Client.ts:516")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"editguildapplicationcommand"},"editGuildApplicationCommand"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"editGuildApplicationCommand"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"guildId"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"commandId"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"data"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"cache?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/ApplicationCommand"},(0,i.kt)("inlineCode",{parentName:"a"},"ApplicationCommand")),">"),(0,i.kt)("p",null,"Edit a guild command."),(0,i.kt)("h4",{id:"parameters-10"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"guildId")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"the id of the guild")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"commandId")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"the id of the command")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"data")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/api/interfaces/EditApplicationCommandOptions"},(0,i.kt)("inlineCode",{parentName:"a"},"EditApplicationCommandOptions"))),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"options to edit")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"cache?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"true")),(0,i.kt)("td",{parentName:"tr",align:"left"},"set/update the command to cache")))),(0,i.kt)("h4",{id:"returns-9"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/ApplicationCommand"},(0,i.kt)("inlineCode",{parentName:"a"},"ApplicationCommand")),">"),(0,i.kt)("h4",{id:"defined-in-28"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L713"},"packages/libcord/src/Client.ts:713")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"emit"},"emit"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"emit"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"K"),">","(",(0,i.kt)("inlineCode",{parentName:"p"},"event"),", ...",(0,i.kt)("inlineCode",{parentName:"p"},"args"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Client"},(0,i.kt)("inlineCode",{parentName:"a"},"Client")),">"),(0,i.kt)("p",null,"Emit a typed event and wait for each typed listener to return."),(0,i.kt)("h4",{id:"type-parameters"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"K")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,i.kt)("inlineCode",{parentName:"td"},"never"))))),(0,i.kt)("h4",{id:"parameters-11"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"event")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"K")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The typed event name to emit.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"...args")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Parameters"),"<{}","[",(0,i.kt)("inlineCode",{parentName:"td"},"K"),"]",">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The arguments to pass to the typed listeners.")))),(0,i.kt)("h4",{id:"returns-10"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Client"},(0,i.kt)("inlineCode",{parentName:"a"},"Client")),">"),(0,i.kt)("h4",{id:"inherited-from-1"},"Inherited from"),(0,i.kt)("p",null,"EventEmitter.emit"),(0,i.kt)("h4",{id:"defined-in-29"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/utils/EventEmitter.ts#L139"},"packages/libcord/src/utils/EventEmitter.ts:139")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"emitsync"},"emitSync"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"emitSync"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"K"),">","(",(0,i.kt)("inlineCode",{parentName:"p"},"event"),", ...",(0,i.kt)("inlineCode",{parentName:"p"},"args"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Client"},(0,i.kt)("inlineCode",{parentName:"a"},"Client"))),(0,i.kt)("p",null,"Emit a typed event without waiting for each listener to\nreturn."),(0,i.kt)("h4",{id:"type-parameters-1"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"K")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,i.kt)("inlineCode",{parentName:"td"},"never"))))),(0,i.kt)("h4",{id:"parameters-12"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"event")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"K")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The typed event name to emit.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"...args")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Parameters"),"<{}","[",(0,i.kt)("inlineCode",{parentName:"td"},"K"),"]",">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The arguments to pass to the typed listeners.")))),(0,i.kt)("h4",{id:"returns-11"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Client"},(0,i.kt)("inlineCode",{parentName:"a"},"Client"))),(0,i.kt)("h4",{id:"inherited-from-2"},"Inherited from"),(0,i.kt)("p",null,"EventEmitter.emitSync"),(0,i.kt)("h4",{id:"defined-in-30"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/utils/EventEmitter.ts#L112"},"packages/libcord/src/utils/EventEmitter.ts:112")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"fetchapplicationcommand"},"fetchApplicationCommand"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"fetchApplicationCommand"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"commandId"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"checkCache?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"cache?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/ApplicationCommand"},(0,i.kt)("inlineCode",{parentName:"a"},"ApplicationCommand")),">"),(0,i.kt)("p",null,"fetch a global application command with the command id"),(0,i.kt)("h4",{id:"parameters-13"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"commandId")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"the id of the command")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"checkCache?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"true")),(0,i.kt)("td",{parentName:"tr",align:"left"},"check if the command are already in the cache")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"cache?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"true")),(0,i.kt)("td",{parentName:"tr",align:"left"},"set the command to cache")))),(0,i.kt)("h4",{id:"returns-12"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/ApplicationCommand"},(0,i.kt)("inlineCode",{parentName:"a"},"ApplicationCommand")),">"),(0,i.kt)("h4",{id:"defined-in-31"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L488"},"packages/libcord/src/Client.ts:488")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"fetchapplicationcommands"},"fetchApplicationCommands"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"fetchApplicationCommands"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"cache?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/ApplicationCommand"},(0,i.kt)("inlineCode",{parentName:"a"},"ApplicationCommand")),"[]",">"),(0,i.kt)("p",null,"get all global bot applications commands"),(0,i.kt)("h4",{id:"parameters-14"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"cache?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"true")),(0,i.kt)("td",{parentName:"tr",align:"left"},"set the commands to cache")))),(0,i.kt)("h4",{id:"returns-13"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/ApplicationCommand"},(0,i.kt)("inlineCode",{parentName:"a"},"ApplicationCommand")),"[]",">"),(0,i.kt)("p",null,"a array of commands object"),(0,i.kt)("h4",{id:"defined-in-32"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L417"},"packages/libcord/src/Client.ts:417")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"fetchchannel"},"fetchChannel"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"fetchChannel"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"id"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"checkCache?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"setToCache?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/VoiceChannel"},(0,i.kt)("inlineCode",{parentName:"a"},"VoiceChannel"))," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/TextChannel"},(0,i.kt)("inlineCode",{parentName:"a"},"TextChannel"))," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/CategoryChannel"},(0,i.kt)("inlineCode",{parentName:"a"},"CategoryChannel"))," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/PrivateChannel"},(0,i.kt)("inlineCode",{parentName:"a"},"PrivateChannel")),">"),(0,i.kt)("h4",{id:"parameters-15"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"id")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"checkCache")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"true"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"setToCache")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"true"))))),(0,i.kt)("h4",{id:"returns-14"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/VoiceChannel"},(0,i.kt)("inlineCode",{parentName:"a"},"VoiceChannel"))," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/TextChannel"},(0,i.kt)("inlineCode",{parentName:"a"},"TextChannel"))," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/CategoryChannel"},(0,i.kt)("inlineCode",{parentName:"a"},"CategoryChannel"))," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/PrivateChannel"},(0,i.kt)("inlineCode",{parentName:"a"},"PrivateChannel")),">"),(0,i.kt)("h4",{id:"defined-in-33"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L338"},"packages/libcord/src/Client.ts:338")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"fetchguild"},"fetchGuild"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"fetchGuild"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"id"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"checkCache?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"setToCache?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Guild"},(0,i.kt)("inlineCode",{parentName:"a"},"Guild")),">"),(0,i.kt)("h4",{id:"parameters-16"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"id")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"checkCache")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"true"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"setToCache")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"true"))))),(0,i.kt)("h4",{id:"returns-15"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Guild"},(0,i.kt)("inlineCode",{parentName:"a"},"Guild")),">"),(0,i.kt)("h4",{id:"defined-in-34"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L320"},"packages/libcord/src/Client.ts:320")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"fetchguildapplicationcommand"},"fetchGuildApplicationCommand"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"fetchGuildApplicationCommand"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"guildId"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"commandId"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"checkCache?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"cache?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/ApplicationCommand"},(0,i.kt)("inlineCode",{parentName:"a"},"ApplicationCommand")),">"),(0,i.kt)("p",null,"fetch a guild command with id"),(0,i.kt)("h4",{id:"parameters-17"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"guildId")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"the id of the guild")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"commandId")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"the id of the command")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"checkCache?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"true")),(0,i.kt)("td",{parentName:"tr",align:"left"},"check if  command are already in cache")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"cache?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"true")),(0,i.kt)("td",{parentName:"tr",align:"left"},"set the command to cache")))),(0,i.kt)("h4",{id:"returns-16"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/ApplicationCommand"},(0,i.kt)("inlineCode",{parentName:"a"},"ApplicationCommand")),">"),(0,i.kt)("h4",{id:"defined-in-35"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L683"},"packages/libcord/src/Client.ts:683")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"fetchguildapplicationcommands"},"fetchGuildApplicationCommands"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"fetchGuildApplicationCommands"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"guildID"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"cache?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/ApplicationCommand"},(0,i.kt)("inlineCode",{parentName:"a"},"ApplicationCommand")),"[]",">"),(0,i.kt)("p",null,"get all applications commands of a guild"),(0,i.kt)("h4",{id:"parameters-18"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"guildID")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"the id of the guild")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"cache?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"true")),(0,i.kt)("td",{parentName:"tr",align:"left"},"set the commands to cache")))),(0,i.kt)("h4",{id:"returns-17"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/ApplicationCommand"},(0,i.kt)("inlineCode",{parentName:"a"},"ApplicationCommand")),"[]",">"),(0,i.kt)("p",null,"a array of commands object"),(0,i.kt)("h4",{id:"defined-in-36"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L598"},"packages/libcord/src/Client.ts:598")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"fetchmembers"},"fetchMembers"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"fetchMembers"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"guildId"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"limit?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"setToCache?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"after?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Member"},(0,i.kt)("inlineCode",{parentName:"a"},"Member")),"[]",">"),(0,i.kt)("h4",{id:"parameters-19"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"guildId")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"limit")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"100"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"setToCache")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"true"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"after")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"0"))))),(0,i.kt)("h4",{id:"returns-18"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Member"},(0,i.kt)("inlineCode",{parentName:"a"},"Member")),"[]",">"),(0,i.kt)("h4",{id:"defined-in-37"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L368"},"packages/libcord/src/Client.ts:368")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"off"},"off"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"off"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"K"),">","(",(0,i.kt)("inlineCode",{parentName:"p"},"event"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"listener"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Client"},(0,i.kt)("inlineCode",{parentName:"a"},"Client"))),(0,i.kt)("p",null,"Remove a specific listener in the event emitter on a specific\ntyped event."),(0,i.kt)("h4",{id:"type-parameters-2"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"K")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,i.kt)("inlineCode",{parentName:"td"},"never"))))),(0,i.kt)("h4",{id:"parameters-20"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"event")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"K")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The typed event name.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"listener")),(0,i.kt)("td",{parentName:"tr",align:"left"},"{}","[",(0,i.kt)("inlineCode",{parentName:"td"},"K"),"]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The typed event listener function.")))),(0,i.kt)("h4",{id:"returns-19"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Client"},(0,i.kt)("inlineCode",{parentName:"a"},"Client"))),(0,i.kt)("h4",{id:"inherited-from-3"},"Inherited from"),(0,i.kt)("p",null,"EventEmitter.off"),(0,i.kt)("h4",{id:"defined-in-38"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/utils/EventEmitter.ts#L68"},"packages/libcord/src/utils/EventEmitter.ts:68")),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"off"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"K"),">","(",(0,i.kt)("inlineCode",{parentName:"p"},"event"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Client"},(0,i.kt)("inlineCode",{parentName:"a"},"Client"))),(0,i.kt)("p",null,"Remove all listeners on a specific typed event."),(0,i.kt)("h4",{id:"type-parameters-3"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"K")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,i.kt)("inlineCode",{parentName:"td"},"never"))))),(0,i.kt)("h4",{id:"parameters-21"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"event")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"K")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The typed event name.")))),(0,i.kt)("h4",{id:"returns-20"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Client"},(0,i.kt)("inlineCode",{parentName:"a"},"Client"))),(0,i.kt)("h4",{id:"inherited-from-4"},"Inherited from"),(0,i.kt)("p",null,"EventEmitter.off"),(0,i.kt)("h4",{id:"defined-in-39"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/utils/EventEmitter.ts#L74"},"packages/libcord/src/utils/EventEmitter.ts:74")),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"off"),"(): ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Client"},(0,i.kt)("inlineCode",{parentName:"a"},"Client"))),(0,i.kt)("p",null,"Remove all events from the event listener."),(0,i.kt)("h4",{id:"returns-21"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Client"},(0,i.kt)("inlineCode",{parentName:"a"},"Client"))),(0,i.kt)("h4",{id:"inherited-from-5"},"Inherited from"),(0,i.kt)("p",null,"EventEmitter.off"),(0,i.kt)("h4",{id:"defined-in-40"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/utils/EventEmitter.ts#L79"},"packages/libcord/src/utils/EventEmitter.ts:79")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"once"},"once"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"once"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"K"),">","(",(0,i.kt)("inlineCode",{parentName:"p"},"event"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"listener"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Client"},(0,i.kt)("inlineCode",{parentName:"a"},"Client"))),(0,i.kt)("p",null,"Listen for a typed event once."),(0,i.kt)("h4",{id:"type-parameters-4"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"K")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,i.kt)("inlineCode",{parentName:"td"},"never"))))),(0,i.kt)("h4",{id:"parameters-22"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"event")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"K")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The typed event name to listen for.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"listener")),(0,i.kt)("td",{parentName:"tr",align:"left"},"{}","[",(0,i.kt)("inlineCode",{parentName:"td"},"K"),"]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The typed listener function.")))),(0,i.kt)("h4",{id:"returns-22"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Client"},(0,i.kt)("inlineCode",{parentName:"a"},"Client"))),(0,i.kt)("h4",{id:"inherited-from-6"},"Inherited from"),(0,i.kt)("p",null,"EventEmitter.once"),(0,i.kt)("h4",{id:"defined-in-41"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/utils/EventEmitter.ts#L49"},"packages/libcord/src/utils/EventEmitter.ts:49")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"queue"},"queue"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"queue"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"K"),">","(",(0,i.kt)("inlineCode",{parentName:"p"},"event"),", ...",(0,i.kt)("inlineCode",{parentName:"p"},"args"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Client"},(0,i.kt)("inlineCode",{parentName:"a"},"Client"))),(0,i.kt)("p",null,"The same as emitSync, but wait for each typed listener to\nreturn before calling the next typed listener."),(0,i.kt)("h4",{id:"type-parameters-5"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"K")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,i.kt)("inlineCode",{parentName:"td"},"never"))))),(0,i.kt)("h4",{id:"parameters-23"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"event")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"K")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The typed event name.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"...args")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Parameters"),"<{}","[",(0,i.kt)("inlineCode",{parentName:"td"},"K"),"]",">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The arguments to pass to the typed listeners.")))),(0,i.kt)("h4",{id:"returns-23"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Client"},(0,i.kt)("inlineCode",{parentName:"a"},"Client"))),(0,i.kt)("h4",{id:"inherited-from-7"},"Inherited from"),(0,i.kt)("p",null,"EventEmitter.queue"),(0,i.kt)("h4",{id:"defined-in-42"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/utils/EventEmitter.ts#L170"},"packages/libcord/src/utils/EventEmitter.ts:170")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"tojson"},"toJSON"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"toJSON"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"space?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("h4",{id:"parameters-24"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"space")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"1"))))),(0,i.kt)("h4",{id:"returns-24"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("h4",{id:"defined-in-43"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L804"},"packages/libcord/src/Client.ts:804")),(0,i.kt)("h2",{id:"events"},"Events"),(0,i.kt)("h3",{id:"on"},"on"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"on"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"event"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"listener"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Client"},(0,i.kt)("inlineCode",{parentName:"a"},"Client"))),(0,i.kt)("p",null,"raw packets emitted by the Gateway\nClient#raw"),(0,i.kt)("h4",{id:"parameters-25"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"event")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},'"raw"')," ","|"," ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/enums/CLIENT_EVENTS#raw"},(0,i.kt)("inlineCode",{parentName:"a"},"RAW")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"listener")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"eventName"),": ",(0,i.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"data"),": ",(0,i.kt)("inlineCode",{parentName:"td"},"any"),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns-25"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Client"},(0,i.kt)("inlineCode",{parentName:"a"},"Client"))),(0,i.kt)("h4",{id:"overrides"},"Overrides"),(0,i.kt)("p",null,"EventEmitter.on"),(0,i.kt)("h4",{id:"defined-in-44"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L89"},"packages/libcord/src/Client.ts:89")),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"on"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"event"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"listener"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Client"},(0,i.kt)("inlineCode",{parentName:"a"},"Client"))),(0,i.kt)("p",null,"emitted when the client is ready\nClient#ready"),(0,i.kt)("h4",{id:"parameters-26"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"event")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/api/enums/CLIENT_EVENTS#ready"},(0,i.kt)("inlineCode",{parentName:"a"},"READY"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"ready"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"listener")),(0,i.kt)("td",{parentName:"tr",align:"left"},"() => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns-26"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Client"},(0,i.kt)("inlineCode",{parentName:"a"},"Client"))),(0,i.kt)("h4",{id:"overrides-1"},"Overrides"),(0,i.kt)("p",null,"EventEmitter.on"),(0,i.kt)("h4",{id:"defined-in-45"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L97"},"packages/libcord/src/Client.ts:97")),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"on"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"event"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"listener"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Client"},(0,i.kt)("inlineCode",{parentName:"a"},"Client"))),(0,i.kt)("p",null,"emitted when the client receives a new Message\nClient#messageCreate"),(0,i.kt)("h4",{id:"parameters-27"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"event")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/api/enums/CLIENT_EVENTS#message"},(0,i.kt)("inlineCode",{parentName:"a"},"MESSAGE"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"messageCreate"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"listener")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"message"),": ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/classes/Message"},(0,i.kt)("inlineCode",{parentName:"a"},"Message")),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"void"),">")))),(0,i.kt)("h4",{id:"returns-27"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Client"},(0,i.kt)("inlineCode",{parentName:"a"},"Client"))),(0,i.kt)("h4",{id:"overrides-2"},"Overrides"),(0,i.kt)("p",null,"EventEmitter.on"),(0,i.kt)("h4",{id:"defined-in-46"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L102"},"packages/libcord/src/Client.ts:102")),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"on"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"event"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"listener"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Client"},(0,i.kt)("inlineCode",{parentName:"a"},"Client"))),(0,i.kt)("p",null,"emitted when the client receives a new Message\nClient#messageCreate"),(0,i.kt)("h4",{id:"parameters-28"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"event")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/api/enums/CLIENT_EVENTS#interaction_create"},(0,i.kt)("inlineCode",{parentName:"a"},"INTERACTION_CREATE"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"interactionCreate"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"listener")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"interaction"),": ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/classes/CommandInteraction"},(0,i.kt)("inlineCode",{parentName:"a"},"CommandInteraction"))," ","|"," ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/classes/Interaction"},(0,i.kt)("inlineCode",{parentName:"a"},"Interaction"))," ","|"," ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/classes/MessageContextMenuInteraction"},(0,i.kt)("inlineCode",{parentName:"a"},"MessageContextMenuInteraction")),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"void"),">")))),(0,i.kt)("h4",{id:"returns-28"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Client"},(0,i.kt)("inlineCode",{parentName:"a"},"Client"))),(0,i.kt)("h4",{id:"overrides-3"},"Overrides"),(0,i.kt)("p",null,"EventEmitter.on"),(0,i.kt)("h4",{id:"defined-in-47"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L110"},"packages/libcord/src/Client.ts:110")),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"on"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"event"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"listener"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Client"},(0,i.kt)("inlineCode",{parentName:"a"},"Client"))),(0,i.kt)("p",null,"emitted when theres a thread creator\nClient#threadCreate"),(0,i.kt)("h4",{id:"parameters-29"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"event")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/api/enums/CLIENT_EVENTS#thread_create"},(0,i.kt)("inlineCode",{parentName:"a"},"THREAD_CREATE"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"threadCreate"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"listener")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"thread"),": ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/classes/PrivateThread"},(0,i.kt)("inlineCode",{parentName:"a"},"PrivateThread"))," ","|"," ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/classes/PublicThread"},(0,i.kt)("inlineCode",{parentName:"a"},"PublicThread")),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns-29"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Client"},(0,i.kt)("inlineCode",{parentName:"a"},"Client"))),(0,i.kt)("h4",{id:"overrides-4"},"Overrides"),(0,i.kt)("p",null,"EventEmitter.on"),(0,i.kt)("h4",{id:"defined-in-48"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L124"},"packages/libcord/src/Client.ts:124")),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"on"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"event"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"listener"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Client"},(0,i.kt)("inlineCode",{parentName:"a"},"Client"))),(0,i.kt)("p",null,"emitted when theres a thread deleted\nClient#threadDelete"),(0,i.kt)("h4",{id:"parameters-30"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"event")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/api/enums/CLIENT_EVENTS#thread_delete"},(0,i.kt)("inlineCode",{parentName:"a"},"THREAD_DELETE"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"threadDelete"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"listener")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"thread"),": ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/classes/PrivateThread"},(0,i.kt)("inlineCode",{parentName:"a"},"PrivateThread"))," ","|"," ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/classes/PublicThread"},(0,i.kt)("inlineCode",{parentName:"a"},"PublicThread")),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns-30"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Client"},(0,i.kt)("inlineCode",{parentName:"a"},"Client"))),(0,i.kt)("h4",{id:"overrides-5"},"Overrides"),(0,i.kt)("p",null,"EventEmitter.on"),(0,i.kt)("h4",{id:"defined-in-49"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L133"},"packages/libcord/src/Client.ts:133")),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"on"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"event"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"listener"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Client"},(0,i.kt)("inlineCode",{parentName:"a"},"Client"))),(0,i.kt)("p",null,"emitted when there is an error\nClient#error"),(0,i.kt)("h4",{id:"parameters-31"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"event")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},'"error"')," ","|"," ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/enums/CLIENT_EVENTS#error"},(0,i.kt)("inlineCode",{parentName:"a"},"ERROR")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"listener")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"error"),": ",(0,i.kt)("inlineCode",{parentName:"td"},"Error"),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns-31"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Client"},(0,i.kt)("inlineCode",{parentName:"a"},"Client"))),(0,i.kt)("h4",{id:"overrides-6"},"Overrides"),(0,i.kt)("p",null,"EventEmitter.on"),(0,i.kt)("h4",{id:"defined-in-50"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L142"},"packages/libcord/src/Client.ts:142")),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"on"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"event"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"listener"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Client"},(0,i.kt)("inlineCode",{parentName:"a"},"Client"))),(0,i.kt)("p",null,"emitted when the bot has joined a new server\nClient#guildCreate"),(0,i.kt)("h4",{id:"parameters-32"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"event")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/api/enums/CLIENT_EVENTS#guild_create"},(0,i.kt)("inlineCode",{parentName:"a"},"GUILD_CREATE"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"guildCreate"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"listener")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"guild"),": ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/classes/Guild"},(0,i.kt)("inlineCode",{parentName:"a"},"Guild")),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns-32"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Client"},(0,i.kt)("inlineCode",{parentName:"a"},"Client"))),(0,i.kt)("h4",{id:"overrides-7"},"Overrides"),(0,i.kt)("p",null,"EventEmitter.on"),(0,i.kt)("h4",{id:"defined-in-51"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L150"},"packages/libcord/src/Client.ts:150")),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"on"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"event"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"listener"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Client"},(0,i.kt)("inlineCode",{parentName:"a"},"Client"))),(0,i.kt)("p",null,"emitted when the bot has left a server\nClient#guildDelete"),(0,i.kt)("h4",{id:"parameters-33"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"event")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/api/enums/CLIENT_EVENTS#guild_delete"},(0,i.kt)("inlineCode",{parentName:"a"},"GUILD_DELETE"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"guildDelete"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"listener")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"guild"),": ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/classes/Guild"},(0,i.kt)("inlineCode",{parentName:"a"},"Guild")),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns-33"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Client"},(0,i.kt)("inlineCode",{parentName:"a"},"Client"))),(0,i.kt)("h4",{id:"overrides-8"},"Overrides"),(0,i.kt)("p",null,"EventEmitter.on"),(0,i.kt)("h4",{id:"defined-in-52"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L158"},"packages/libcord/src/Client.ts:158")),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"on"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"event"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"listener"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Client"},(0,i.kt)("inlineCode",{parentName:"a"},"Client"))),(0,i.kt)("p",null,"emitted when a new channel has been created in a server\nClient#channelCreate"),(0,i.kt)("h4",{id:"parameters-34"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"event")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/api/enums/CLIENT_EVENTS#channel_create"},(0,i.kt)("inlineCode",{parentName:"a"},"CHANNEL_CREATE"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"channelCreate"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"listener")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"channel"),": ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/classes/GuildChannel"},(0,i.kt)("inlineCode",{parentName:"a"},"GuildChannel")),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns-34"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Client"},(0,i.kt)("inlineCode",{parentName:"a"},"Client"))),(0,i.kt)("h4",{id:"overrides-9"},"Overrides"),(0,i.kt)("p",null,"EventEmitter.on"),(0,i.kt)("h4",{id:"defined-in-53"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L166"},"packages/libcord/src/Client.ts:166")),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"on"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"event"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"listener"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Client"},(0,i.kt)("inlineCode",{parentName:"a"},"Client"))),(0,i.kt)("p",null,"emitted when a channel has been deleted\nClient#channelDelete"),(0,i.kt)("h4",{id:"parameters-35"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"event")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/api/enums/CLIENT_EVENTS#channel_delete"},(0,i.kt)("inlineCode",{parentName:"a"},"CHANNEL_DELETE"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"channelDelete"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"listener")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"channel"),": ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/classes/GuildChannel"},(0,i.kt)("inlineCode",{parentName:"a"},"GuildChannel")),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns-35"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Client"},(0,i.kt)("inlineCode",{parentName:"a"},"Client"))),(0,i.kt)("h4",{id:"overrides-10"},"Overrides"),(0,i.kt)("p",null,"EventEmitter.on"),(0,i.kt)("h4",{id:"defined-in-54"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L174"},"packages/libcord/src/Client.ts:174")),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"on"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"event"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"listener"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Client"},(0,i.kt)("inlineCode",{parentName:"a"},"Client"))),(0,i.kt)("p",null,"emitted when a channel has been edited\nClient#channelUpdate"),(0,i.kt)("h4",{id:"parameters-36"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"event")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/api/enums/CLIENT_EVENTS#channel_edit"},(0,i.kt)("inlineCode",{parentName:"a"},"CHANNEL_EDIT"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"channelUpdate"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"listener")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"channel"),": ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/classes/GuildChannel"},(0,i.kt)("inlineCode",{parentName:"a"},"GuildChannel")),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns-36"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Client"},(0,i.kt)("inlineCode",{parentName:"a"},"Client"))),(0,i.kt)("h4",{id:"overrides-11"},"Overrides"),(0,i.kt)("p",null,"EventEmitter.on"),(0,i.kt)("h4",{id:"defined-in-55"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L182"},"packages/libcord/src/Client.ts:182")),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"on"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"event"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"listener"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Client"},(0,i.kt)("inlineCode",{parentName:"a"},"Client"))),(0,i.kt)("p",null,"emitted when a role has been created\nClient#roleCreate"),(0,i.kt)("h4",{id:"parameters-37"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"event")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/api/enums/CLIENT_EVENTS#role_create"},(0,i.kt)("inlineCode",{parentName:"a"},"ROLE_CREATE"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"roleCreate"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"listener")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"role"),": ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/classes/Role"},(0,i.kt)("inlineCode",{parentName:"a"},"Role")),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns-37"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Client"},(0,i.kt)("inlineCode",{parentName:"a"},"Client"))),(0,i.kt)("h4",{id:"overrides-12"},"Overrides"),(0,i.kt)("p",null,"EventEmitter.on"),(0,i.kt)("h4",{id:"defined-in-56"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L190"},"packages/libcord/src/Client.ts:190")),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"on"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"event"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"listener"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Client"},(0,i.kt)("inlineCode",{parentName:"a"},"Client"))),(0,i.kt)("p",null,"emitted when a role has been edited\nClient#roleUpdate"),(0,i.kt)("h4",{id:"parameters-38"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"event")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/api/enums/CLIENT_EVENTS#role_edit"},(0,i.kt)("inlineCode",{parentName:"a"},"ROLE_EDIT"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"roleUpdate"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"listener")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"role"),": ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/classes/Role"},(0,i.kt)("inlineCode",{parentName:"a"},"Role")),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns-38"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Client"},(0,i.kt)("inlineCode",{parentName:"a"},"Client"))),(0,i.kt)("h4",{id:"overrides-13"},"Overrides"),(0,i.kt)("p",null,"EventEmitter.on"),(0,i.kt)("h4",{id:"defined-in-57"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L198"},"packages/libcord/src/Client.ts:198")),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"on"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"event"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"listener"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Client"},(0,i.kt)("inlineCode",{parentName:"a"},"Client"))),(0,i.kt)("p",null,"emitted when a role has been deleted\nClient#roleDelete"),(0,i.kt)("h4",{id:"parameters-39"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"event")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/api/enums/CLIENT_EVENTS#role_delete"},(0,i.kt)("inlineCode",{parentName:"a"},"ROLE_DELETE"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"roleDelete"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"listener")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"role"),": ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/classes/Role"},(0,i.kt)("inlineCode",{parentName:"a"},"Role")),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns-39"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/Client"},(0,i.kt)("inlineCode",{parentName:"a"},"Client"))),(0,i.kt)("h4",{id:"overrides-14"},"Overrides"),(0,i.kt)("p",null,"EventEmitter.on"),(0,i.kt)("h4",{id:"defined-in-58"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Libcord/libcord/blob/39e0f56/packages/libcord/src/Client.ts#L206"},"packages/libcord/src/Client.ts:206")))}k.isMDXComponent=!0}}]);